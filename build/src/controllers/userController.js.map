{"version":3,"file":"userController.js","names":["jwt","userModel","dotenv","config","signInToken","id","userController","findAll","req","res","users","find","status","json","data","error","postOne","firstName","lastName","email","password","role","body","user","findOne","message","newUser","create","token","sign","_id","process","env","TOKEN_SECRET","expiresIn","JWT_EXPERISIN","post","correctPassword","LoggedInAs","UpdateOne","updateUser","findByIdAndUpdate","params","new","runValidators","deleteOne","findById","findOneAndDelete","getAllUsers","send","getAllUsersById","userss","deleteSingleUserById","ok"],"sources":["../../../src/controllers/userController.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport userModel from '../Models/userModel.js';\r\nimport   dotenv  from \"dotenv\"\r\n\r\ndotenv.config()\r\n\r\n\r\nconst signInToken = (id) => {};\r\nclass userController {\r\n  static async findAll(req, res) {\r\n    try {\r\n      const users = await userModel.find();\r\n\r\n      res.status(200).json({\r\n        status: 'success',\r\n        data: {\r\n          users,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      res.status(404).json({\r\n        status: 'error',\r\n        error: 'Not user found',\r\n      });\r\n    }\r\n  }\r\n  static async postOne(req, res) {\r\n   \r\n    try {\r\n      const { firstName, lastName, email, password, role } = req.body;\r\n      const user = await userModel.findOne({ email });\r\n  \r\n      if (user) {\r\n        return res.status(409).json({\r\n          status: 'fail',\r\n          message: 'Email in use',\r\n        });\r\n      }\r\n  \r\n\r\n      const newUser = await userModel.create(req.body);\r\n      const token = await jwt.sign(\r\n        { id: newUser._id },\r\n        process.env.TOKEN_SECRET,\r\n        {\r\n          expiresIn: process.env.JWT_EXPERISIN,\r\n        }\r\n      );\r\n\r\n      res.status(404).json({\r\n        status: 'success',\r\n        users: 'Signup success and login',\r\n        token,\r\n        data: {\r\n          newUser,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      res.status(200).json({\r\n        status: 'error',\r\n        error: error,\r\n      });\r\n    }\r\n  }\r\n  static async post(req, res) {\r\n    const { email, password } = req.body;\r\n\r\n    if (!email || !password) {\r\n      return res.status(400).json({\r\n        status: 'fail',\r\n        message: 'Email and password are required',\r\n      });\r\n    }\r\n    const user = await userModel.findOne({ email });\r\n    if (!user || !(await user.correctPassword(password, user.password))) {\r\n      return res.status(401).json({\r\n        status: 'fail',\r\n        message: 'Incorrect email or password',\r\n      });\r\n    }\r\n\r\n   \r\n    try {\r\n      const token = await jwt.sign({ id: user._id }, process.env.TOKEN_SECRET, {\r\n        expiresIn: process.env.JWT_EXPERISIN,\r\n      });\r\n      res.status(200).json({\r\n        status: 'success',\r\n        users: 'SignIn success and login',\r\n        LoggedInAs: {\r\n          user,\r\n        },\r\n        token,\r\n      });\r\n    } catch (error) {\r\n      res.status(404).json({\r\n        status: 'error',\r\n        error: error,\r\n      });\r\n    }\r\n  }\r\n  static async UpdateOne(req, res) {\r\n    const { password } = req.body;\r\n\r\n    if (password) {\r\n      return res.status(400).json({\r\n        status: 'fail',\r\n        message: 'this is not the route for updating password is for others',\r\n      });\r\n    }\r\n    const updateUser = await userModel.findByIdAndUpdate(\r\n      req.params.id,\r\n      req.body,\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n    try {\r\n      res.status(200).json({\r\n        status: 'success',\r\n        message: 'Update success done ',\r\n      });\r\n    } catch (error) {\r\n      res.status(404).json({\r\n        status: 'error',\r\n        error: error,\r\n      });\r\n    }\r\n  }\r\n  static async deleteOne(req, res) {\r\n   await userModel.findById(req.params.id);\r\n    if (!user) {\r\n      return res.status(404).json({\r\n        status: 'fail',\r\n        message: 'user not found',\r\n      });\r\n    }\r\n    try {\r\n      await userModel.findOneAndDelete({ _id: req.params.id });\r\n      res.status(200).json({\r\n        status: 'success',\r\n        users: 'Delete user successfully done',\r\n      });\r\n    } catch (error) {\r\n      res.status(204).json({\r\n        status: 'error',\r\n        error: 'Delete failed',\r\n      });\r\n    }\r\n  }\r\n}\r\nexport const getAllUsers = async(req,res)=>{\r\n  const users = await userModel.find();\r\n  res.send(users);\r\n}\r\nexport const getAllUsersById = async(req,res) =>{\r\n  const userss = await userModel.findById({_id: req.params.id});\r\n  res.status(500).send(userss);\r\n}\r\nexport const deleteSingleUserById = async (req, res) => {\r\n  try {\r\n      await userModel.deleteOne({ _id: req.params.id });\r\n    res.status(207).send({ok:'delete success'});\r\n  } catch {\r\n    res.status(406);\r\n    res.send({ error: \"user doesn't exist!\" });\r\n  }\r\n}\r\n\r\n\r\nexport default userController;\r\n\r\n// import { Users } from \"../models/userModel.js\";\r\n// import  Jwt  from \"jsonwebtoken\";\r\n// export const register = async(req,res) =>{\r\n//  const { username, email, password } =req.body;\r\n//  try {\r\n//     let user= await Users.findOne({ email });\r\n\r\n//     if (user) throw {code:11000};\r\n\r\n//     user = new Users({username, email, password});\r\n//     await user.save();\r\n//     //jwt token\r\n//     return res.status(201).json({ok:'registered'})\r\n\r\n//  } catch (error) {\r\n//     console.log(error);\r\n//     if(error.code ===11000){\r\n//         return res.status(400).json({error:'Email in use'}) ;\r\n//     }\r\n//  }\r\n// }\r\n// export const login = async(req,res) =>{\r\n// try {\r\n//     const { email, password } =req.body;\r\n//     let user= await Users.findOne({ email });\r\n//     if(!user)\r\n//     return res.status(403).json({ok:'user not exist'})\r\n\r\n//     const requestpassword = await user.comparePassword(password);\r\n//     if(!requestpassword){\r\n//         return res.status(403).json({ok:'incorrect password'})\r\n//     }\r\n//     //jwt token\r\n//     res.json({ok:'login'});\r\n// } catch (error) {\r\n//     console.log(error);\r\n// }\r\n\r\n  \r\n// }\r\n// export const finduser = async(req,res) =>{\r\n//     const users = await Users.find();\r\n//     res.send(users);\r\n//   }"],"mappings":"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"}