{"version":3,"file":"blog.controller.js","names":["Blog","commentSchema","imageUpload","cloudinary","dotenv","config","v2","cloud_name","process","env","CLOUD_NAME","api_key","API_KEY","api_secret","API_SECRET","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","createBlog","req","res","console","log","body","title","file","image","uploader","upload","path","blog","create","postedDate","secure_url","status","json","message","err","getAllBlogs","blogs","find","success","data","error","getBlogById","findById","_id","params","id","number","length","deleteBlog","deleteOne","send","ok","updateSingleBlog","findOne","result","folder","public_id","url","save","addComment","comments","comment","user","getAllComments","populate","model","select","like","statusCode","alreadyLiked","likes","toString","filter","push","blogId","likesCounting"],"sources":["../../../src/controllers/blog.controller.js"],"sourcesContent":["import Blog from \"../models/Blogs.model.js\";\r\nimport  { commentSchema } from \"../models/commentmod.js\";\r\nimport imageUpload from \"../helpers/imageUpload.js\";\r\n// import { blogSchemad } from \"../helpers/validation_schema.js\";\r\n\r\n\r\nimport cloudinary  from 'cloudinary';\r\nimport   dotenv  from \"dotenv\"\r\n\r\ndotenv.config()\r\n// import uploader from '../config/cloudinary';\r\ncloudinary.v2;\r\n// const CLOUD_NAME = ;\r\n// const API_KEY = ;\r\n// const API_SECRET= ;\r\ncloudinary.config({\r\n        cloud_name:process.env.CLOUD_NAME,\r\n        api_key: process.env.API_KEY,\r\n        api_secret: process.env.API_SECRET,\r\n      });\r\n      var today = new Date()\r\n      var dd = String(today.getDate()).padStart(2, \"0\");\r\n      var mm = String(today.getMonth() +1).padStart(2, \"0\");\r\n      var yyyy = today.getFullYear();\r\n      today= dd+ \"/\" + mm + \"/\" + yyyy;\r\n\r\nexport const createBlog = async function(req, res){\r\n  /* istanbul ignore next*/\r\n    console.log(\"AASASASASA\", req.body)\r\n    try {\r\n      const {title, body}=req.body\r\n        console.log(title, body,req.file)\r\n        // const validationResult = await blogSchema.validateAsync(req.body);\r\n        // if(req.files) {\r\n            \r\n            const image = await cloudinary.uploader.upload(req.file.path);\r\n            // }\r\n               const blog= await Blog.create({\r\n                title:title,\r\n                body:body,\r\n                postedDate: today,\r\n                image: image.secure_url,\r\n                })\r\n                \r\n                return  res.status(201).json({\r\n                  status:\"success\",\r\n                  message:\"Blo  created success\",\r\n                  blog,\r\n                })\r\n\r\n    \r\n    }\r\n    catch (err) {\r\n     /* istanbul ignore next*/\r\n        res.status(500).json(err)\r\n        console.log(err)\r\n    }\r\n\r\n};\r\n// export const getAllBlogs = async(req,res) =>{\r\n//     const blogs = await Blog.find();\r\n//     res.send(blogs);\r\n//   }\r\n\r\n\r\n  // export const getAllBlogs = async (req, res) => {\r\n  //   try {\r\n  //   const blogs = await Blog.find();\r\n  //   return res.status(200).json({\r\n  //   status: \"success\",\r\n  //   number: blogs.length,\r\n  //   blogs,\r\n  //   });\r\n  //   } catch (error) {\r\n  //   return res.status(500).json({\r\n  //   status: \"failed\",\r\n  //   error: error.message,\r\n  //   });\r\n  //   }\r\n  //   };\r\n    export const getAllBlogs = async (req, res) => {\r\n     \r\n      try {\r\n        const blogs = await Blog.find();\r\n        res.json({ status: 200, success: true, data: blogs });\r\n      } catch (error) {\r\n       /* istanbul ignore next*/\r\n        return res.status(404).json({\r\n          status: \"failed\",\r\n          error: error.message,\r\n        });\r\n      }\r\n    };\r\n    \r\n\r\n\r\n  // export const getBlogById = async(req,res) =>{\r\n  //   const blogs = await Blog.findById({_id: req.params.id});\r\n  //   res.send(blogs);\r\n  // }\r\n\r\n\r\n  export const getBlogById = async (req, res) => {\r\n    try {\r\n    const blogs = await Blog.findById({_id: req.params.id});\r\n    return res.status(200).json({\r\n    status: \"success\",\r\n    number: blogs.length,\r\n    blogs,\r\n    });\r\n    } catch (error) {\r\n      /* istanbul ignore next*/\r\n    return res.status(404).json({\r\n    status: \"failed\",\r\n    error: error.message,\r\n    });\r\n    }\r\n    };\r\n\r\n\r\n\r\n  export const deleteBlog = async (req, res) => {\r\n    try {\r\n     await Blog.deleteOne({ _id: req.params.id });\r\n      res.status(207).send({ok:'delete success'});\r\n    } catch (error){\r\n     /* istanbul ignore next*/\r\n      res.status(406);\r\n      res.send({ error: \"blog doesn't exist!\" });\r\n    }\r\n  }\r\n\r\n  export const updateSingleBlog = async (req, res) => {\r\n    /* istanbul ignore next*/\r\n    try {\r\n      const blog = await Blog.findOne({ _id: req.params.id });\r\n  \r\n      if (req.body.title) {\r\n        blog.title = req.body.title;\r\n      }\r\n      if (req.body.body) {\r\n        blog.body = req.body.body;\r\n      }\r\n      if (req.file) {\r\n        blog.image = req.file.path;\r\n        const result = await cloudinary.uploader.upload(req.file.path, {\r\n          folder: 'portfolio/blogImages',\r\n          public_id: `${blog.title}_image`,\r\n        });\r\n        blog.image = result.url;\r\n      }\r\n      await blog.save();\r\n      res.status(201).json({\r\n        status: 201,\r\n        success: true,\r\n        message: 'Blog updated',\r\n        data: blog,\r\n      });\r\n    } catch (err) {\r\n      res\r\n        .status(400)\r\n        .json({ status: 400, success: false, message: \"Blog doesn't exist\" });\r\n    }\r\n  };\r\n\r\n\r\n  export const addComment = async (req, res) => {\r\n    /* istanbul ignore next*/\r\n    try {\r\n      const blog = await Blog.findOne({ _id: req.params.id });\r\n      if (!blog) {\r\n        res\r\n          .status(404)\r\n          /* istanbul ignore next*/\r\n          .json({ status: 404, success: false, message: \"Blog doesn't exist\" });\r\n        return;\r\n      } else {\r\n        blog.comments = [\r\n          ...blog.comments,\r\n          { comment: req.body.comment, user: req.user, blog: blog },\r\n        ];\r\n\r\n        blog.save();\r\n        res.status(201).json({\r\n          success: true,\r\n          message: `Comment added`,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      /* istanbul ignore next*/\r\n      res.status(500).json({\r\n        success: false,\r\n        message: `Server Error: Error when adding comment ${error.message}`,\r\n      });\r\n      console.log(`Error while adding comment ${error.message}`);\r\n    }\r\n  };\r\n  export const getAllComments = async (req, res) => {\r\n    try {\r\n      const blog = await Blog\r\n        .findOne({ _id: req.params.id })\r\n        .populate({\r\n          path: 'comments.user',\r\n          model: 'User',\r\n          select: 'username',\r\n        })\r\n        /* istanbul ignore next*/\r\n        .populate({ path: 'comments.blog', model: 'Blog', select: 'title' });\r\n      if (!blog) {\r\n        res.status(404).json({ error: \"Blog doesn't exist\" });\r\n        return;\r\n      }\r\n  \r\n      res.status(201).send(blog.comments);\r\n    } catch (error){\r\n      /* istanbul ignore next*/\r\n      res.status(500).json({ error: 'Internal server error' });\r\n    }\r\n  };\r\n  /* istanbul ignore next*/\r\n  export const like = async (req, res) => {\r\n    try {\r\n      const blog = await Blog.findById(req.params.id);\r\n      if (!blog) {\r\n        return res.status(404).send({\r\n          statusCode: 404,\r\n          success: false,\r\n          data: { message: 'Blog not found!' },\r\n        });\r\n      }\r\n      //check if the blog is already liked\r\n      const alreadyLiked = blog.likes.find(\r\n        (like) => like.user.toString() === req.user._id.toString(),\r\n      );\r\n      //unlike the blog\r\n      if (alreadyLiked) {\r\n        blog.likes = blog.likes.filter(\r\n          (like) => like.user.toString() !== req.user._id.toString(),\r\n        );\r\n      } else {\r\n        blog.likes.push({\r\n          user: req.user._id,\r\n          blog: req.params.blogId,\r\n        });\r\n      }\r\n      await blog.save();\r\n      res.status(201).json({\r\n        statusCode: 201,\r\n        success: true,\r\n        data: [{ message: 'Done', body: blog }],\r\n      });\r\n    } catch (error) {\r\n      res.status(500).json({\r\n        success: false,\r\n        message: `Server Error: Error when liking or disliking ${error.message}`,\r\n      });\r\n    }\r\n  };\r\n  /* istanbul ignore next*/\r\n export const likesCounting = async (req, res) => {\r\n  /* istanbul ignore next*/\r\n    try {\r\n      const blog = await Blog.findOne({ _id: req.params.id });\r\n      if (!blog) {\r\n        res\r\n          .status(404)\r\n          .json({ status: 404, success: false, message: \"Blog doesn't exist\" });\r\n      } else {\r\n        /* istanbul ignore next*/\r\n        res.status(200).json({\r\n          status: 200,\r\n          success: true,\r\n          message: `Number of likes: ${blog.likes.length}`,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      /* istanbul ignore next*/\r\n      res.status(500).json({\r\n        success: false,\r\n        message: `Server Error: Error when fetching likes ${error.message}`,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n "],"mappings":"AAAA,OAAOA,IAAI,MAAM,0BAA0B;AAC3C,SAAUC,aAAa,QAAQ,yBAAyB;AACxD,OAAOC,WAAW,MAAM,2BAA2B;AACnD;;AAGA,OAAOC,UAAU,MAAO,YAAY;AACpC,OAASC,MAAM,MAAO,QAAQ;AAE9BA,MAAM,CAACC,MAAM,EAAE;AACf;AACAF,UAAU,CAACG,EAAE;AACb;AACA;AACA;AACAH,UAAU,CAACE,MAAM,CAAC;EACVE,UAAU,EAACC,OAAO,CAACC,GAAG,CAACC,UAAU;EACjCC,OAAO,EAAEH,OAAO,CAACC,GAAG,CAACG,OAAO;EAC5BC,UAAU,EAAEL,OAAO,CAACC,GAAG,CAACK;AAC1B,CAAC,CAAC;AACF,IAAIC,KAAK,GAAG,IAAIC,IAAI,EAAE;AACtB,IAAIC,EAAE,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAO,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACjD,IAAIC,EAAE,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAQ,EAAE,GAAE,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACrD,IAAIG,IAAI,GAAGR,KAAK,CAACS,WAAW,EAAE;AAC9BT,KAAK,GAAEE,EAAE,GAAE,GAAG,GAAGI,EAAE,GAAG,GAAG,GAAGE,IAAI;AAEtC,OAAO,MAAME,UAAU,GAAG,gBAAeC,GAAG,EAAEC,GAAG,EAAC;EAChD;EACEC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,GAAG,CAACI,IAAI,CAAC;EACnC,IAAI;IACF,MAAM;MAACC,KAAK;MAAED;IAAI,CAAC,GAACJ,GAAG,CAACI,IAAI;IAC1BF,OAAO,CAACC,GAAG,CAACE,KAAK,EAAED,IAAI,EAACJ,GAAG,CAACM,IAAI,CAAC;IACjC;IACA;;IAEI,MAAMC,KAAK,GAAG,MAAM9B,UAAU,CAAC+B,QAAQ,CAACC,MAAM,CAACT,GAAG,CAACM,IAAI,CAACI,IAAI,CAAC;IAC7D;IACG,MAAMC,IAAI,GAAE,MAAMrC,IAAI,CAACsC,MAAM,CAAC;MAC7BP,KAAK,EAACA,KAAK;MACXD,IAAI,EAACA,IAAI;MACTS,UAAU,EAAExB,KAAK;MACjBkB,KAAK,EAAEA,KAAK,CAACO;IACb,CAAC,CAAC;IAEF,OAAQb,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC3BD,MAAM,EAAC,SAAS;MAChBE,OAAO,EAAC,sBAAsB;MAC9BN;IACF,CAAC,CAAC;EAGd,CAAC,CACD,OAAOO,GAAG,EAAE;IACX;IACGjB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACE,GAAG,CAAC;IACzBhB,OAAO,CAACC,GAAG,CAACe,GAAG,CAAC;EACpB;AAEJ,CAAC;AACD;AACA;AACA;AACA;;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,OAAO,MAAMC,WAAW,GAAG,OAAOnB,GAAG,EAAEC,GAAG,KAAK;EAE7C,IAAI;IACF,MAAMmB,KAAK,GAAG,MAAM9C,IAAI,CAAC+C,IAAI,EAAE;IAC/BpB,GAAG,CAACe,IAAI,CAAC;MAAED,MAAM,EAAE,GAAG;MAAEO,OAAO,EAAE,IAAI;MAAEC,IAAI,EAAEH;IAAM,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACf;IACC,OAAOvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BD,MAAM,EAAE,QAAQ;MAChBS,KAAK,EAAEA,KAAK,CAACP;IACf,CAAC,CAAC;EACJ;AACF,CAAC;;AAIH;AACA;AACA;AACA;;AAGA,OAAO,MAAMQ,WAAW,GAAG,OAAOzB,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACJ,MAAMmB,KAAK,GAAG,MAAM9C,IAAI,CAACoD,QAAQ,CAAC;MAACC,GAAG,EAAE3B,GAAG,CAAC4B,MAAM,CAACC;IAAE,CAAC,CAAC;IACvD,OAAO5B,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC5BD,MAAM,EAAE,SAAS;MACjBe,MAAM,EAAEV,KAAK,CAACW,MAAM;MACpBX;IACA,CAAC,CAAC;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd;IACF,OAAOvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC5BD,MAAM,EAAE,QAAQ;MAChBS,KAAK,EAAEA,KAAK,CAACP;IACb,CAAC,CAAC;EACF;AACA,CAAC;AAIH,OAAO,MAAMe,UAAU,GAAG,OAAOhC,GAAG,EAAEC,GAAG,KAAK;EAC5C,IAAI;IACH,MAAM3B,IAAI,CAAC2D,SAAS,CAAC;MAAEN,GAAG,EAAE3B,GAAG,CAAC4B,MAAM,CAACC;IAAG,CAAC,CAAC;IAC3C5B,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACmB,IAAI,CAAC;MAACC,EAAE,EAAC;IAAgB,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOX,KAAK,EAAC;IACd;IACCvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC;IACfd,GAAG,CAACiC,IAAI,CAAC;MAAEV,KAAK,EAAE;IAAsB,CAAC,CAAC;EAC5C;AACF,CAAC;AAED,OAAO,MAAMY,gBAAgB,GAAG,OAAOpC,GAAG,EAAEC,GAAG,KAAK;EAClD;EACA,IAAI;IACF,MAAMU,IAAI,GAAG,MAAMrC,IAAI,CAAC+D,OAAO,CAAC;MAAEV,GAAG,EAAE3B,GAAG,CAAC4B,MAAM,CAACC;IAAG,CAAC,CAAC;IAEvD,IAAI7B,GAAG,CAACI,IAAI,CAACC,KAAK,EAAE;MAClBM,IAAI,CAACN,KAAK,GAAGL,GAAG,CAACI,IAAI,CAACC,KAAK;IAC7B;IACA,IAAIL,GAAG,CAACI,IAAI,CAACA,IAAI,EAAE;MACjBO,IAAI,CAACP,IAAI,GAAGJ,GAAG,CAACI,IAAI,CAACA,IAAI;IAC3B;IACA,IAAIJ,GAAG,CAACM,IAAI,EAAE;MACZK,IAAI,CAACJ,KAAK,GAAGP,GAAG,CAACM,IAAI,CAACI,IAAI;MAC1B,MAAM4B,MAAM,GAAG,MAAM7D,UAAU,CAAC+B,QAAQ,CAACC,MAAM,CAACT,GAAG,CAACM,IAAI,CAACI,IAAI,EAAE;QAC7D6B,MAAM,EAAE,sBAAsB;QAC9BC,SAAS,EAAG,GAAE7B,IAAI,CAACN,KAAM;MAC3B,CAAC,CAAC;MACFM,IAAI,CAACJ,KAAK,GAAG+B,MAAM,CAACG,GAAG;IACzB;IACA,MAAM9B,IAAI,CAAC+B,IAAI,EAAE;IACjBzC,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBD,MAAM,EAAE,GAAG;MACXO,OAAO,EAAE,IAAI;MACbL,OAAO,EAAE,cAAc;MACvBM,IAAI,EAAEZ;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZjB,GAAG,CACAc,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;MAAED,MAAM,EAAE,GAAG;MAAEO,OAAO,EAAE,KAAK;MAAEL,OAAO,EAAE;IAAqB,CAAC,CAAC;EACzE;AACF,CAAC;AAGD,OAAO,MAAM0B,UAAU,GAAG,OAAO3C,GAAG,EAAEC,GAAG,KAAK;EAC5C;EACA,IAAI;IACF,MAAMU,IAAI,GAAG,MAAMrC,IAAI,CAAC+D,OAAO,CAAC;MAAEV,GAAG,EAAE3B,GAAG,CAAC4B,MAAM,CAACC;IAAG,CAAC,CAAC;IACvD,IAAI,CAAClB,IAAI,EAAE;MACTV,GAAG,CACAc,MAAM,CAAC,GAAG;MACX,0BACCC,IAAI,CAAC;QAAED,MAAM,EAAE,GAAG;QAAEO,OAAO,EAAE,KAAK;QAAEL,OAAO,EAAE;MAAqB,CAAC,CAAC;MACvE;IACF,CAAC,MAAM;MACLN,IAAI,CAACiC,QAAQ,GAAG,CACd,GAAGjC,IAAI,CAACiC,QAAQ,EAChB;QAAEC,OAAO,EAAE7C,GAAG,CAACI,IAAI,CAACyC,OAAO;QAAEC,IAAI,EAAE9C,GAAG,CAAC8C,IAAI;QAAEnC,IAAI,EAAEA;MAAK,CAAC,CAC1D;MAEDA,IAAI,CAAC+B,IAAI,EAAE;MACXzC,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBM,OAAO,EAAE,IAAI;QACbL,OAAO,EAAG;MACZ,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOO,KAAK,EAAE;IACd;IACAvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBM,OAAO,EAAE,KAAK;MACdL,OAAO,EAAG,2CAA0CO,KAAK,CAACP,OAAQ;IACpE,CAAC,CAAC;IACFf,OAAO,CAACC,GAAG,CAAE,8BAA6BqB,KAAK,CAACP,OAAQ,EAAC,CAAC;EAC5D;AACF,CAAC;AACD,OAAO,MAAM8B,cAAc,GAAG,OAAO/C,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACF,MAAMU,IAAI,GAAG,MAAMrC,IAAI,CACpB+D,OAAO,CAAC;MAAEV,GAAG,EAAE3B,GAAG,CAAC4B,MAAM,CAACC;IAAG,CAAC,CAAC,CAC/BmB,QAAQ,CAAC;MACRtC,IAAI,EAAE,eAAe;MACrBuC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACV,CAAC;IACD,0BACCF,QAAQ,CAAC;MAAEtC,IAAI,EAAE,eAAe;MAAEuC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAC,CAAC;IACtE,IAAI,CAACvC,IAAI,EAAE;MACTV,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEQ,KAAK,EAAE;MAAqB,CAAC,CAAC;MACrD;IACF;IAEAvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACmB,IAAI,CAACvB,IAAI,CAACiC,QAAQ,CAAC;EACrC,CAAC,CAAC,OAAOpB,KAAK,EAAC;IACb;IACAvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEQ,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC;AACD;AACA,OAAO,MAAM2B,IAAI,GAAG,OAAOnD,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IACF,MAAMU,IAAI,GAAG,MAAMrC,IAAI,CAACoD,QAAQ,CAAC1B,GAAG,CAAC4B,MAAM,CAACC,EAAE,CAAC;IAC/C,IAAI,CAAClB,IAAI,EAAE;MACT,OAAOV,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACmB,IAAI,CAAC;QAC1BkB,UAAU,EAAE,GAAG;QACf9B,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE;UAAEN,OAAO,EAAE;QAAkB;MACrC,CAAC,CAAC;IACJ;IACA;IACA,MAAMoC,YAAY,GAAG1C,IAAI,CAAC2C,KAAK,CAACjC,IAAI,CACjC8B,IAAI,IAAKA,IAAI,CAACL,IAAI,CAACS,QAAQ,EAAE,KAAKvD,GAAG,CAAC8C,IAAI,CAACnB,GAAG,CAAC4B,QAAQ,EAAE,CAC3D;IACD;IACA,IAAIF,YAAY,EAAE;MAChB1C,IAAI,CAAC2C,KAAK,GAAG3C,IAAI,CAAC2C,KAAK,CAACE,MAAM,CAC3BL,IAAI,IAAKA,IAAI,CAACL,IAAI,CAACS,QAAQ,EAAE,KAAKvD,GAAG,CAAC8C,IAAI,CAACnB,GAAG,CAAC4B,QAAQ,EAAE,CAC3D;IACH,CAAC,MAAM;MACL5C,IAAI,CAAC2C,KAAK,CAACG,IAAI,CAAC;QACdX,IAAI,EAAE9C,GAAG,CAAC8C,IAAI,CAACnB,GAAG;QAClBhB,IAAI,EAAEX,GAAG,CAAC4B,MAAM,CAAC8B;MACnB,CAAC,CAAC;IACJ;IACA,MAAM/C,IAAI,CAAC+B,IAAI,EAAE;IACjBzC,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBoC,UAAU,EAAE,GAAG;MACf9B,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE,CAAC;QAAEN,OAAO,EAAE,MAAM;QAAEb,IAAI,EAAEO;MAAK,CAAC;IACxC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;IACdvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBM,OAAO,EAAE,KAAK;MACdL,OAAO,EAAG,gDAA+CO,KAAK,CAACP,OAAQ;IACzE,CAAC,CAAC;EACJ;AACF,CAAC;AACD;AACD,OAAO,MAAM0C,aAAa,GAAG,OAAO3D,GAAG,EAAEC,GAAG,KAAK;EAChD;EACE,IAAI;IACF,MAAMU,IAAI,GAAG,MAAMrC,IAAI,CAAC+D,OAAO,CAAC;MAAEV,GAAG,EAAE3B,GAAG,CAAC4B,MAAM,CAACC;IAAG,CAAC,CAAC;IACvD,IAAI,CAAClB,IAAI,EAAE;MACTV,GAAG,CACAc,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAED,MAAM,EAAE,GAAG;QAAEO,OAAO,EAAE,KAAK;QAAEL,OAAO,EAAE;MAAqB,CAAC,CAAC;IACzE,CAAC,MAAM;MACL;MACAhB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACnBD,MAAM,EAAE,GAAG;QACXO,OAAO,EAAE,IAAI;QACbL,OAAO,EAAG,oBAAmBN,IAAI,CAAC2C,KAAK,CAACvB,MAAO;MACjD,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd;IACAvB,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBM,OAAO,EAAE,KAAK;MACdL,OAAO,EAAG,2CAA0CO,KAAK,CAACP,OAAQ;IACpE,CAAC,CAAC;EACJ;AACF,CAAC"}