{"version":3,"file":"blog.routes.js","names":["express","multer","path","createBlog","getAllBlogs","deleteBlog","getBlogById","addComment","getAllComments","updateSingleBlog","like","likesCounting","auth","commentsSchema","validate","getAllUsers","getAllUsersById","deleteSingleUserById","blogRouter","Router","upload","storage","diskStorage","fileFilter","req","file","cb","ext","extname","originalname","Error","post","single","get","delete","patch"],"sources":["../../../src/routes/blog.routes.js"],"sourcesContent":["import  express  from \"express\";\r\nimport multer  from \"multer\"\r\nimport path  from \"path\"\r\nimport { createBlog ,getAllBlogs, deleteBlog ,getBlogById , addComment ,getAllComments ,updateSingleBlog ,like ,likesCounting}  from \"../controllers/blog.controller.js\";\r\nimport { auth } from \"../middleware/auth.js\";\r\nimport { commentsSchema } from \"../middleware/validation.js\";\r\nimport validate from \"../middleware/validation.middleware.js\";\r\nimport { getAllUsers ,getAllUsersById, deleteSingleUserById} from \"../controllers/userController.js\";\r\nconst blogRouter= express.Router();\r\n\r\nvar upload = multer({\r\n    storage: multer.diskStorage({}),\r\n    fileFilter: (req, file, cb) => {\r\n      let ext = path.extname(file.originalname);\r\n        if (ext !== \".jpg\" && ext !== \".jpeg\" && ext !== \".png\") {\r\n        cb(new Error(\"File type is not supported\"), false);\r\n        return;\r\n      }\r\n      cb(null, true);\r\n    },\r\n  });\r\n\r\n\r\n\r\nblogRouter.post('/blogs',upload.single(\"image\"),createBlog);\r\n\r\n blogRouter.get('/blogs/get',getAllBlogs)\r\n blogRouter.get('/signIn/upget',getAllUsers)\r\n blogRouter.get('/blogs/:id',getBlogById )\r\n blogRouter.get('/signIn/:id',getAllUsersById)\r\nblogRouter.delete('/blogs/:id',deleteBlog)\r\nblogRouter.delete('/signIn/:id',deleteSingleUserById)\r\nblogRouter.patch('/blogs/update/:id',upload.single(\"image\"), updateSingleBlog);\r\n//blog likes\r\nblogRouter.post('/blogs/:id/likes',auth, like);\r\nblogRouter.get('/blogs/:id/likes', likesCounting);\r\n// blogRouter.patch('/blogs/:id',updateBlog)\r\nblogRouter.post('/blogs/comments/:id', [auth, validate(commentsSchema)], addComment);\r\nblogRouter.get('/comments/:id',getAllComments);\r\n\r\n\r\n export default blogRouter;"],"mappings":"AAAA,OAAQA,OAAO,MAAO,SAAS;AAC/B,OAAOC,MAAM,MAAO,QAAQ;AAC5B,OAAOC,IAAI,MAAO,MAAM;AACxB,SAASC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAGC,UAAU,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,aAAa,QAAQ,mCAAmC;AACxK,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,OAAOC,QAAQ,MAAM,wCAAwC;AAC7D,SAASC,WAAW,EAAEC,eAAe,EAAEC,oBAAoB,QAAO,kCAAkC;AACpG,MAAMC,UAAU,GAAElB,OAAO,CAACmB,MAAM,EAAE;AAElC,IAAIC,MAAM,GAAGnB,MAAM,CAAC;EAChBoB,OAAO,EAAEpB,MAAM,CAACqB,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/BC,UAAU,EAAE,CAACC,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;IAC7B,IAAIC,GAAG,GAAGzB,IAAI,CAAC0B,OAAO,CAACH,IAAI,CAACI,YAAY,CAAC;IACvC,IAAIF,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,OAAO,IAAIA,GAAG,KAAK,MAAM,EAAE;MACzDD,EAAE,CAAC,IAAII,KAAK,CAAC,4BAA4B,CAAC,EAAE,KAAK,CAAC;MAClD;IACF;IACAJ,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EAChB;AACF,CAAC,CAAC;AAIJR,UAAU,CAACa,IAAI,CAAC,QAAQ,EAACX,MAAM,CAACY,MAAM,CAAC,OAAO,CAAC,EAAC7B,UAAU,CAAC;AAE1De,UAAU,CAACe,GAAG,CAAC,YAAY,EAAC7B,WAAW,CAAC;AACxCc,UAAU,CAACe,GAAG,CAAC,eAAe,EAAClB,WAAW,CAAC;AAC3CG,UAAU,CAACe,GAAG,CAAC,YAAY,EAAC3B,WAAW,CAAE;AACzCY,UAAU,CAACe,GAAG,CAAC,aAAa,EAACjB,eAAe,CAAC;AAC9CE,UAAU,CAACgB,MAAM,CAAC,YAAY,EAAC7B,UAAU,CAAC;AAC1Ca,UAAU,CAACgB,MAAM,CAAC,aAAa,EAACjB,oBAAoB,CAAC;AACrDC,UAAU,CAACiB,KAAK,CAAC,mBAAmB,EAACf,MAAM,CAACY,MAAM,CAAC,OAAO,CAAC,EAAEvB,gBAAgB,CAAC;AAC9E;AACAS,UAAU,CAACa,IAAI,CAAC,kBAAkB,EAACnB,IAAI,EAAEF,IAAI,CAAC;AAC9CQ,UAAU,CAACe,GAAG,CAAC,kBAAkB,EAAEtB,aAAa,CAAC;AACjD;AACAO,UAAU,CAACa,IAAI,CAAC,qBAAqB,EAAE,CAACnB,IAAI,EAAEE,QAAQ,CAACD,cAAc,CAAC,CAAC,EAAEN,UAAU,CAAC;AACpFW,UAAU,CAACe,GAAG,CAAC,eAAe,EAACzB,cAAc,CAAC;AAG7C,eAAeU,UAAU"}