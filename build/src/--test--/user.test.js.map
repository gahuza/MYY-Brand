{"version":3,"file":"user.test.js","names":["request","supertest","app","Jwt","userModel","mongoose","jest","setTimeout","beforeEach","set","connect","process","env","MONGO_URI_TEST","useNewUrlParser","error","console","log","message","afterEach","connection","close","describe","user","it","response","post","send","firstName","lastName","email","password","role","expect","decodedToken","jwt","verify","body","token","TOKEN_SECRET","status","toBe","users","data","newUser","id","toBeTruthy"],"sources":["../../../src/--test--/user.test.js"],"sourcesContent":["\r\nimport request from \"supertest\";\r\nimport supertest from \"supertest\";\r\nimport app from \"../app.js\"; // assuming the implementation code is in a file named app.js\r\n// const userModel = require('../models/user'); // assuming the implementation uses Mongoose for the User model\r\nimport { Jwt } from \"jsonwebtoken\";\r\nimport  userModel from \"../models/userModel.js\"\r\nimport mongoose from \"mongoose\";\r\n\r\n\r\njest.setTimeout(20000);\r\nbeforeEach(async () => {\r\n  try {\r\n    mongoose.set('strictQuery', false);\r\n    await mongoose.connect(process.env.MONGO_URI_TEST, { useNewUrlParser: true });\r\n  } \r\n    \r\n   catch (error) {\r\n    console.log(error.message);\r\n  }\r\n \r\n});\r\n/* Closing database connection after each test. */\r\nafterEach(async () => {\r\n  await mongoose.connection.close();\r\n});\r\n\r\n\r\ndescribe('POST /users', () => {\r\n  let user;\r\n\r\n  // beforeAll(async () => {\r\n    // create a sample user to be used in the tests\r\n  //   user = await userModel.create({\r\n  //     firstName: 'John',\r\n  //     lastName: 'Doe',\r\n  //     email: 'john.doe@example.com',\r\n  //     password: 'password',\r\n  //     role: 'user',\r\n  //   });\r\n  // });\r\n\r\n  // afterAll(async () => {\r\n  //   // remove the sample user after all tests are done\r\n  //   await userModel.deleteOne({ _id: '63e8ebba626cdb5784dca94d' });\r\n  // });\r\n\r\n  it('should create a new user and return a JWT token', async () => {\r\n    const response = await request(app)\r\n      .post('/users')\r\n      .send({\r\n        firstName: 'Jane',\r\n        lastName: 'Doe',\r\n        email: 'jane.doe@example.com',\r\n        password: 'password',\r\n        role: 'user',\r\n      })\r\n      .expect(404);\r\n\r\n    const decodedToken = jwt.verify(response.body.token, process.env.TOKEN_SECRET);\r\n\r\n    expect(response.body.status).toBe('success');\r\n    expect(response.body.users).toBe('Signup success and login');\r\n    expect(response.body.data.newUser.email).toBe('jane.doe@example.com');\r\n    expect(decodedToken.id).toBeTruthy();\r\n  });\r\n\r\n  it('should return 409 if email is already in use', async () => {\r\n    const response = await request(app)\r\n      .post('/api/signup')\r\n      .send({\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        email: 'john.doe@example.com',\r\n        password: 'password',\r\n        role: 'user',\r\n      })\r\n      .expect(409);\r\n\r\n    expect(response.body.status).toBe('fail');\r\n    expect(response.body.message).toBe('Email in use');\r\n  });\r\n})"],"mappings":"AACA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,GAAG,MAAM,WAAW,CAAC,CAAC;AAC7B;AACA,SAASC,GAAG,QAAQ,cAAc;AAClC,OAAQC,SAAS,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,UAAU;AAG/BC,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC;AACtBC,UAAU,CAAC,YAAY;EACrB,IAAI;IACFH,QAAQ,CAACI,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;IAClC,MAAMJ,QAAQ,CAACK,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,cAAc,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC;EAC/E,CAAC,CAEA,OAAOC,KAAK,EAAE;IACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC5B;AAEF,CAAC,CAAC;AACF;AACAC,SAAS,CAAC,YAAY;EACpB,MAAMd,QAAQ,CAACe,UAAU,CAACC,KAAK,EAAE;AACnC,CAAC,CAAC;AAGFC,QAAQ,CAAC,aAAa,EAAE,MAAM;EAC5B,IAAIC,IAAI;;EAER;EACE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEAC,EAAE,CAAC,iDAAiD,EAAE,YAAY;IAChE,MAAMC,QAAQ,GAAG,MAAMzB,OAAO,CAACE,GAAG,CAAC,CAChCwB,IAAI,CAAC,QAAQ,CAAC,CACdC,IAAI,CAAC;MACJC,SAAS,EAAE,MAAM;MACjBC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE,sBAAsB;MAC7BC,QAAQ,EAAE,UAAU;MACpBC,IAAI,EAAE;IACR,CAAC,CAAC,CACDC,MAAM,CAAC,GAAG,CAAC;IAEd,MAAMC,YAAY,GAAGC,GAAG,CAACC,MAAM,CAACX,QAAQ,CAACY,IAAI,CAACC,KAAK,EAAE3B,OAAO,CAACC,GAAG,CAAC2B,YAAY,CAAC;IAE9EN,MAAM,CAACR,QAAQ,CAACY,IAAI,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC;IAC5CR,MAAM,CAACR,QAAQ,CAACY,IAAI,CAACK,KAAK,CAAC,CAACD,IAAI,CAAC,0BAA0B,CAAC;IAC5DR,MAAM,CAACR,QAAQ,CAACY,IAAI,CAACM,IAAI,CAACC,OAAO,CAACd,KAAK,CAAC,CAACW,IAAI,CAAC,sBAAsB,CAAC;IACrER,MAAM,CAACC,YAAY,CAACW,EAAE,CAAC,CAACC,UAAU,EAAE;EACtC,CAAC,CAAC;EAEFtB,EAAE,CAAC,8CAA8C,EAAE,YAAY;IAC7D,MAAMC,QAAQ,GAAG,MAAMzB,OAAO,CAACE,GAAG,CAAC,CAChCwB,IAAI,CAAC,aAAa,CAAC,CACnBC,IAAI,CAAC;MACJC,SAAS,EAAE,MAAM;MACjBC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE,sBAAsB;MAC7BC,QAAQ,EAAE,UAAU;MACpBC,IAAI,EAAE;IACR,CAAC,CAAC,CACDC,MAAM,CAAC,GAAG,CAAC;IAEdA,MAAM,CAACR,QAAQ,CAACY,IAAI,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC;IACzCR,MAAM,CAACR,QAAQ,CAACY,IAAI,CAACnB,OAAO,CAAC,CAACuB,IAAI,CAAC,cAAc,CAAC;EACpD,CAAC,CAAC;AACJ,CAAC,CAAC"}